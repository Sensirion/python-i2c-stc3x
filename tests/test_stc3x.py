#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# (c) Copyright 2024 Sensirion AG, Switzerland
#
#     THIS FILE IS AUTOMATICALLY GENERATED!
#
# Generator:     sensirion-driver-generator 0.38.1
# Product:       stc3x
# Model-Version: 1.0.0
#

import pytest
from sensirion_i2c_stc3x.device import Stc3xDevice


@pytest.fixture
def sensor(channel_provider):
    channel_provider.i2c_frequency = 100e3
    channel_provider.supply_voltage = 3.3
    with channel_provider:
        channel = channel_provider.get_channel(slave_address=0x29,
                                               crc_parameters=(8, 0x31, 0xff, 0x0))
        yield Stc3xDevice(channel)


def test_get_product_id1(sensor):
    (product_id, serial_number
     ) = sensor.get_product_id()
    print(f"product_id: {product_id}; "
          f"serial_number: {serial_number}; "
          )


def test_set_binary_gas1(sensor):
    sensor.set_binary_gas(19)


def test_set_relative_humidity1(sensor):
    sensor.set_relative_humidity(50.0)


def test_measure_gas_concentration1(sensor):
    (co2_concentration, temperature
     ) = sensor.measure_gas_concentration()
    print(f"co2_concentration: {co2_concentration}; "
          f"temperature: {temperature}; "
          )


def test_self_test1(sensor):
    self_test_output = sensor.self_test()
    print(f"self_test_output: {self_test_output}; "
          )


def test_enable_automatic_self_calibration1(sensor):
    sensor.enable_automatic_self_calibration()


def test_disable_automatic_self_calibration1(sensor):
    sensor.disable_automatic_self_calibration()


def test_forced_recalibration1(sensor):
    sensor.forced_recalibration(0)


def test_enter_sleep_mode1(sensor):
    sensor.enter_sleep_mode()
    sensor.exit_sleep_mode()

